name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: 18

jobs:
  deploy-edge-functions:
    name: Deploy Edge Functions
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 'v1.40.x'

      - name: Deploy functions
        run: |
          cd packages/edge-functions
          supabase functions deploy --no-verify-jwt
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}

  # TODO: Enable when admin website deployment is fully configured
  # deploy-admin-web:
  #   name: Deploy Admin Website
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   environment: production
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Build admin website
  #       run: npm run build -w packages/admin-web
  #       env:
  #         NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  #         NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

  #     - name: Deploy to Vercel
  #       uses: amondnet/vercel-action@v25
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         vercel-args: '--prod'
  #         working-directory: packages/admin-web

  # TODO: Enable when ready to publish API client publicly
  # publish-packages:
  #   name: Publish Packages
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: 'npm'
  #         registry-url: 'https://registry.npmjs.org'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Build packages
  #       run: npm run build

  #     - name: Publish packages
  #       run: |
  #         # Only publish if package.json version has changed
  #         npm publish packages/api-client --access public || echo "Package version unchanged"
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
